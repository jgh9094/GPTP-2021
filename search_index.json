[["index.html", "Supplemental Material for An Exploration of Exploration: Measuring the ability of lexicase selection to find obscure pathways Chapter 1 Introduction 1.1 About our supplemental material 1.2 Contributing authors 1.3 Research overview", " Supplemental Material for An Exploration of Exploration: Measuring the ability of lexicase selection to find obscure pathways Jose Guadalupe Hernandez, Alexander Lalejini, and Charles Ofria 2021-06-16 Chapter 1 Introduction This is the supplemental material associated with our 2021 GPTP contribution entitled, An Exploration of Exploration: Measuring the ability of lexicase selection to find obscure pathways. Preprint forthcoming. 1.1 About our supplemental material This supplemental material is hosted on GitHub using GitHub pages. The source code and configuration files used to generate this supplemental material can be found in this GitHub repository. We compiled our data analyses and supplemental documentation into this nifty web-accessible book using bookdown. Our supplemental material includes the following: TODO 1.2 Contributing authors Jose Guadalupe Hernandez Alexander Lalejini Charles Ofria 1.3 Research overview Abstract: TODO "],["data-availability.html", "Chapter 2 Data Availability 2.1 Source code 2.2 Experimental results", " Chapter 2 Data Availability 2.1 Source code The source code for this work is available on GitHub at https://github.com/jgh9094/GPTP-2021-Exploration-Of-Exploration. 2.2 Experimental results The data from our experiments are available online in an OSF repository (Lalejini and Hernandez 2021) at https://osf.io/xpjft/. References "],["compile-and-run-experiments.html", "Chapter 3 Compile and run experiments 3.1 Docker", " Chapter 3 Compile and run experiments Here, we provide a guide to compiling and running our experiments using our Docker image. Please file an issue on GitHub if something is unclear or does not work. 3.1 Docker TODO 3.1.1 Getting the right image 3.1.1.1 DockerHub 3.1.1.2 Local build 3.1.2 Spinning up a container 3.1.3 Running inside the container 3.1.4 Copying content from the container "],["diagnostic-cardinality.html", "Chapter 4 Diagnostic cardinality 4.1 Overview 4.2 Analysis dependencies 4.3 Setup 4.4 Exploration diagnostic performance 4.5 Unique starting positions 4.6 Manuscript figures", " Chapter 4 Diagnostic cardinality 4.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-05-27-cardinality/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 4.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 4.3 Setup data_loc &lt;- paste0( working_directory, &quot;data/timeseries-res-1000g.csv&quot; ) data &lt;- read.csv( data_loc, na.strings=&quot;NONE&quot; ) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 4.4 Exploration diagnostic performance First, we look at performance over time. Specifically, we look at the normalized aggregage score of the most performant individuals over time. To control for different cardinalities having different maximum scores, we normalized performances (by dividing by cardinality) to values between 0 and 100. elite_trait_ave_fit &lt;- ggplot( data, aes( x=gen, y=elite_trait_avg, color=cardinality, fill=cardinality ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) elite_trait_ave_fit 4.4.1 Final performance Next, we look only at the final performances of each treatment final_data &lt;- filter(data, gen==max(data$gen)) elite_trait_ave_fit_final &lt;- ggplot( final_data, aes(x=cardinality, y=elite_trait_avg, fill=cardinality) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=cardinality), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Cardinality&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_trait_ave_fit_final 4.5 Unique starting positions Next, we analyze the number of unique starting position maintained by populations. ggplot(data, aes(x=gen, y=uni_str_pos, color=cardinality)) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Unique starting positions (population)&quot;, ) + scale_x_continuous( name=&quot;Generation&quot; ) Different cardinalities have numbers of possible starting positions, so next, we look at the proportion of starting positions (out of all possible) maintained by populations. unique_start_positions_coverage_fig &lt;- ggplot( data, aes( x=gen, y=unique_start_positions_coverage, color=cardinality, fill=cardinality ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Starting position coverage&quot;, limits=c(0.0, 1.05) ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) unique_start_positions_coverage_fig 4.5.1 Final starting position coverage final_unique_start_positions_coverage_fig &lt;- ggplot( final_data, aes( x=cardinality, y=unique_start_positions_coverage, fill=cardinality ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=cardinality), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Starting position coverage&quot;, limits=c(0, 1.05) ) + scale_x_discrete( name=&quot;Cardinality&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) final_unique_start_positions_coverage_fig 4.6 Manuscript figures Combine figures for the manuscript. grid &lt;- plot_grid( elite_trait_ave_fit + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_trait_ave_fit_final + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_positions_coverage_fig + ggtitle(&quot;Start position coverage over time&quot;) + guides(color=guide_legend(nrow = 1), fill=guide_legend(nrow=1)) + theme( legend.position=&quot;bottom&quot;, legend.box=&quot;horizontal&quot; ), final_unique_start_positions_coverage_fig + ggtitle(&quot;Final start position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(2,1), labels=&quot;auto&quot; ) save_plot( paste(working_directory, &quot;imgs/cardinality-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=10 ) grid "],["references.html", "References", " References "]]
