[["index.html", "Supplemental Material for An Exploration of Exploration: Measuring the ability of lexicase selection to find obscure pathways Chapter 1 Introduction 1.1 About our supplemental material 1.2 Contributing authors 1.3 Research overview", " Supplemental Material for An Exploration of Exploration: Measuring the ability of lexicase selection to find obscure pathways Jose Guadalupe Hernandez, Alexander Lalejini, and Charles Ofria 2021-06-17 Chapter 1 Introduction This is the supplemental material associated with our 2021 GPTP contribution entitled, An Exploration of Exploration: Measuring the ability of lexicase selection to find obscure pathways. Preprint forthcoming. 1.1 About our supplemental material This supplemental material is hosted on GitHub using GitHub pages. The source code and configuration files used to generate this supplemental material can be found in this GitHub repository. We compiled our data analyses and supplemental documentation into this nifty web-accessible book using bookdown. Our supplemental material includes the following: TODO 1.2 Contributing authors Jose Guadalupe Hernandez Alexander Lalejini Charles Ofria 1.3 Research overview Abstract: TODO "],["data-availability.html", "Chapter 2 Data Availability 2.1 Source code 2.2 Experimental results", " Chapter 2 Data Availability 2.1 Source code The source code for this work is available on GitHub at https://github.com/jgh9094/GPTP-2021-Exploration-Of-Exploration. 2.2 Experimental results The data from our experiments are available online in an OSF repository (Lalejini and Hernandez 2021) at https://osf.io/xpjft/. References "],["compile-and-run-experiments.html", "Chapter 3 Compile and run experiments 3.1 Docker", " Chapter 3 Compile and run experiments Here, we provide a guide to compiling and running our experiments using our Docker image. Please file an issue on GitHub if something is unclear or does not work. 3.1 Docker TODO 3.1.1 Getting the right image 3.1.1.1 DockerHub 3.1.1.2 Local build 3.1.2 Spinning up a container 3.1.3 Running inside the container 3.1.4 Copying content from the container "],["tournament-selection-vs-lexicase-selection.html", "Chapter 4 Tournament selection vs Lexicase selection 4.1 Overview 4.2 Analysis dependencies 4.3 Setup 4.4 Exploration diagnostic performance 4.5 Final Performance 4.6 Unique starting positions 4.7 Manuscript figures", " Chapter 4 Tournament selection vs Lexicase selection 4.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-05-27-tournament/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 4.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 4.3 Setup data_loc &lt;- paste0( working_directory, &quot;data/timeseries-res-1000g.csv&quot; ) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$selection_name &lt;- as.factor( data$selection_name ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 4.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes( x=gen, y=elite_trait_avg, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_fill_brewer( name=&quot;Selection&quot;, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), palette=cb_palette ) + scale_color_brewer( name=&quot;Selection&quot;, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), palette=cb_palette ) elite_ave_performance_fig 4.5 Final Performance elite_final_performance_fig &lt;- ggplot( final_data, aes( x=selection_name, y=elite_trait_avg, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Selection&quot;, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), ) + scale_fill_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), ) + scale_color_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 4.6 Unique starting positions ggplot(data, aes(x=gen, y=uni_str_pos, color=selection_name)) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Unique activation positions (population)&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Generation&quot; ) Different cardinalities have numbers of possible starting positions, so next, we look at the proportion of starting positions (out of all possible) maintained by populations. unique_start_position_coverage_fig &lt;- ggplot( data, aes( x=gen, y=unique_start_positions_coverage, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limit=c(0, 1.0) ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_fill_brewer( name=&quot;Selection&quot;, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), palette=cb_palette ) + scale_color_brewer( name=&quot;Selection&quot;, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), palette=cb_palette ) unique_start_position_coverage_fig 4.6.1 Final starting position Coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=selection_name, y=unique_start_positions_coverage, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;Selection&quot;, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), ) + scale_fill_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), ) + scale_color_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;EpsilonLexicase&quot;, &quot;Tournament&quot;), labels=c(&quot;Lexicase&quot;, &quot;Tournament&quot;), ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 4.7 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste( working_directory, &quot;imgs/tournament-vs-lexicase-panel.pdf&quot;, sep=&quot;&quot; ), grid, base_width=12, base_height=8 ) grid "],["diagnostic-cardinality.html", "Chapter 5 Diagnostic cardinality 5.1 Overview 5.2 Analysis dependencies 5.3 Setup 5.4 Exploration diagnostic performance 5.5 Unique starting positions 5.6 Manuscript figures", " Chapter 5 Diagnostic cardinality 5.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-05-27-cardinality/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 5.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 5.3 Setup data_loc &lt;- paste0( working_directory, &quot;data/timeseries-res-1000g.csv&quot; ) data &lt;- read.csv( data_loc, na.strings=&quot;NONE&quot; ) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 5.4 Exploration diagnostic performance First, we look at performance over time. Specifically, we look at the normalized aggregage score of the most performant individuals over time. To control for different cardinalities having different maximum scores, we normalized performances (by dividing by cardinality) to values between 0 and 100. elite_trait_ave_fit &lt;- ggplot( data, aes( x=gen, y=elite_trait_avg, color=cardinality, fill=cardinality ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) elite_trait_ave_fit 5.4.1 Final performance Next, we look only at the final performances of each treatment final_data &lt;- filter(data, gen==max(data$gen)) elite_trait_ave_fit_final &lt;- ggplot( final_data, aes(x=cardinality, y=elite_trait_avg, fill=cardinality) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=cardinality), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Cardinality&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_trait_ave_fit_final 5.5 Unique starting positions Next, we analyze the number of unique starting position maintained by populations. ggplot(data, aes(x=gen, y=uni_str_pos, color=cardinality)) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Unique activation positions (population)&quot;, ) + scale_x_continuous( name=&quot;Generation&quot; ) Different cardinalities have numbers of possible starting positions, so next, we look at the proportion of starting positions (out of all possible) maintained by populations. unique_start_positions_coverage_fig &lt;- ggplot( data, aes( x=gen, y=unique_start_positions_coverage, color=cardinality, fill=cardinality ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.05) ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) unique_start_positions_coverage_fig 5.5.1 Final starting position coverage final_unique_start_positions_coverage_fig &lt;- ggplot( final_data, aes( x=cardinality, y=unique_start_positions_coverage, fill=cardinality ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=cardinality), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.05) ) + scale_x_discrete( name=&quot;Cardinality&quot; ) + scale_fill_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cardinaltiy&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) final_unique_start_positions_coverage_fig 5.6 Manuscript figures Combine figures for the manuscript. legend &lt;- cowplot::get_legend( elite_trait_ave_fit + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_trait_ave_fit + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_trait_ave_fit_final + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_positions_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), final_unique_start_positions_coverage_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste(working_directory, &quot;imgs/cardinality-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=8 ) grid "],["increasing-population-size-versus-increasing-generations.html", "Chapter 6 Increasing population size versus increasing generations 6.1 Overview 6.2 Analysis dependencies 6.3 Setup 6.4 Exploration diagnostic performance 6.5 Unique starting positions 6.6 Manuscript figures", " Chapter 6 Increasing population size versus increasing generations 6.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-06-03-cardinality-pop-size/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 6.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 6.3 Setup data_loc &lt;- paste0(working_directory, &quot;data/timeseries.csv&quot;) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$epsilon &lt;- as.factor( data$LEX_EPS ) data$POP_SIZE &lt;- as.factor( data$POP_SIZE ) data &lt;- filter(data, cardinality==&quot;100&quot;) # These runs finished. data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 6.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes( x=evaluations, y=elite_trait_avg, color=POP_SIZE, fill=POP_SIZE ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Evaluations&quot; ) + scale_fill_brewer( name=&quot;Population Size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Population Size&quot;, palette=cb_palette ) elite_ave_performance_fig Same as above, but by generations instead of evaluations. ggplot(data, aes(x=gen, y=elite_trait_avg, color=POP_SIZE)) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Elite trait average&quot; ) + scale_x_continuous( name=&quot;Generations&quot; ) 6.4.1 Final performance elite_final_performance_fig &lt;- ggplot( final_data, aes(x=POP_SIZE, y=elite_trait_avg, fill=POP_SIZE) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=POP_SIZE), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Population Size&quot; ) + scale_fill_brewer( name=&quot;Population Size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Population Size&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 6.5 Unique starting positions unique_start_position_coverage_fig &lt;- ggplot( data, aes( x=evaluations, y=unique_start_positions_coverage, color=POP_SIZE, fill=POP_SIZE ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.0) ) + scale_x_continuous( name=&quot;Evaluations&quot; ) + scale_fill_brewer( name=&quot;Population Size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Population Size&quot;, palette=cb_palette ) unique_start_position_coverage_fig 6.5.1 Final starting position coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=POP_SIZE, y=unique_start_positions_coverage, fill=POP_SIZE ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=POP_SIZE), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;Population size&quot; ) + scale_fill_brewer( name=&quot;Population size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Population size&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 6.6 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste(working_directory, &quot;imgs/pop-size-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=8 ) grid "],["epsilon-lexicase.html", "Chapter 7 Epsilon lexicase 7.1 Overview 7.2 Analysis dependencies 7.3 Setup 7.4 Exploration diagnostic performance 7.5 Unique starting positions 7.6 Manuscript figures", " Chapter 7 Epsilon lexicase 7.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-05-28-epsilon/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 7.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 7.3 Setup data_loc &lt;- paste0( working_directory, &quot;data/timeseries-res-1000g.csv&quot; ) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$epsilon &lt;- as.factor( data$LEX_EPS ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 7.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes(x=gen, y=elite_trait_avg, color=epsilon, fill=epsilon) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Generations&quot; ) + scale_fill_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) elite_ave_performance_fig 7.4.1 Final performance elite_final_performance_fig &lt;- ggplot( final_data, aes(x=epsilon, y=elite_trait_avg, fill=epsilon) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=epsilon), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Epsilon&quot; ) + scale_fill_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 7.5 Unique starting positions unique_start_position_coverage_fig &lt;- ggplot( data, aes( x=gen, y=unique_start_positions_coverage, color=epsilon, fill=epsilon ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.0) ) + scale_x_continuous( name=&quot;Generations&quot; ) + scale_fill_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) unique_start_position_coverage_fig 7.5.1 Final coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=epsilon, y=unique_start_positions_coverage, fill=epsilon ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=epsilon), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;Epsilon&quot; ) + scale_fill_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Epsilon&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 7.6 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste(working_directory, &quot;imgs/epsilon-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=8 ) grid "],["down-sampled-lexicase.html", "Chapter 8 Down-sampled lexicase 8.1 Overview 8.2 Analysis dependencies 8.3 Setup 8.4 Exploration diagnostic performance 8.5 Unique starting positions 8.6 Manuscript figures", " Chapter 8 Down-sampled lexicase 8.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-05-28-downsampled/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 8.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 8.3 Setup data_loc &lt;- paste0(working_directory, &quot;data/timeseries.csv&quot;) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$epsilon &lt;- as.factor( data$LEX_EPS ) data$proportion &lt;- factor( data$DSLEX_PROP, levels=c(1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01) ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 8.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes( x=evaluations, y=elite_trait_avg, color=proportion, fill=proportion ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Evaluations&quot; ) + scale_fill_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) elite_ave_performance_fig 8.4.1 Final performance elite_final_performance_fig &lt;- ggplot( final_data, aes( x=proportion, y=elite_trait_avg, fill=proportion ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=proportion), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Sampling rate&quot; ) + scale_fill_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 8.5 Unique starting positions unique_start_position_coverage_fig &lt;- ggplot( data, aes( x=evaluations, y=unique_start_positions_coverage, color=proportion, fill=proportion ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.0) ) + scale_x_continuous( name=&quot;Evaluations&quot; ) + scale_fill_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) unique_start_position_coverage_fig 8.5.1 Final starting position coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=proportion, y=unique_start_positions_coverage, fill=proportion ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=proportion), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;Sampling rate&quot; ) + scale_fill_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Sampling rate&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 8.6 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste(working_directory, &quot;imgs/down-sampled-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=8 ) grid "],["cohort-lexicase.html", "Chapter 9 Cohort lexicase 9.1 Overview 9.2 Analysis dependencies 9.3 Setup 9.4 Exploration diagnostic performance 9.5 Unique starting positions 9.6 Manuscript figures", " Chapter 9 Cohort lexicase 9.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-06-01-cohort/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 9.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 9.3 Setup data_loc &lt;- paste0(working_directory, &quot;data/timeseries.csv&quot;) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$epsilon &lt;- as.factor( data$LEX_EPS ) data$proportion &lt;- factor( data$COH_LEX_PROP, levels=c(1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01) ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 9.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes( x=evaluations, y=elite_trait_avg, color=proportion, fill=proportion ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Evaluations&quot; ) + scale_fill_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) elite_ave_performance_fig 9.4.1 Final performance elite_final_performance_fig &lt;- ggplot( final_data, aes(x=proportion, y=elite_trait_avg, fill=proportion) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=proportion), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Cohort size&quot; ) + scale_fill_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 9.5 Unique starting positions unique_start_position_coverage_fig &lt;- ggplot( data, aes( x=evaluations, y=unique_start_positions_coverage, color=proportion, fill=proportion ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.0) ) + scale_x_continuous( name=&quot;Evaluations&quot; ) + scale_fill_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) unique_start_position_coverage_fig 9.5.1 Final starting position coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=proportion, y=unique_start_positions_coverage, fill=proportion ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=proportion), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;Cohort size&quot; ) + scale_fill_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;Cohort size&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 9.6 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste(working_directory, &quot;imgs/cohort-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=8 ) grid "],["down-sampled-lexicase-versus-cohort-lexicase.html", "Chapter 10 Down-sampled lexicase versus cohort lexicase 10.1 Overview 10.2 Analysis dependencies 10.3 Setup 10.4 Exploration diagnostic performance 10.5 Unique starting positions 10.6 Manuscript figures", " Chapter 10 Down-sampled lexicase versus cohort lexicase 10.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-06-05-downsample-vs-cohort/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Dark2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 10.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 10.3 Setup data_loc &lt;- paste0(working_directory, &quot;data/timeseries.csv&quot;) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$epsilon &lt;- as.factor( data$LEX_EPS ) # I always set cohort and downsampled lexicase sampling rates to # be the same on a given run (regardless of selection scheme) data$proportion &lt;- factor( data$COH_LEX_PROP, levels=c(1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01) ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 10.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes( x=gen, y=elite_trait_avg, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Generations&quot; ) + scale_fill_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + scale_color_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) elite_ave_performance_fig 10.4.1 Final performance elite_final_performance_fig &lt;- ggplot( final_data, aes(x=selection_name, y=elite_trait_avg, fill=selection_name) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;Selection&quot;, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + scale_fill_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + scale_color_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 10.5 Unique starting positions unique_start_position_coverage_fig &lt;- ggplot( data, aes( x=gen, y=unique_start_positions_coverage, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.0) ) + scale_x_continuous( name=&quot;Generations&quot; ) + scale_fill_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + scale_color_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) unique_start_position_coverage_fig 10.5.1 Final starting position coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=selection_name, y=unique_start_positions_coverage, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;Selection&quot;, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + scale_fill_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + scale_color_brewer( name=&quot;Selection&quot;, palette=cb_palette, limits=c(&quot;CohortLexicase&quot;, &quot;DownSampledLexicase&quot;), labels=c(&quot;Cohort lexicase&quot;, &quot;Down-sampled lexicase&quot;) ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 10.6 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste( working_directory, &quot;imgs/down-sampled-vs-cohort-panel.pdf&quot;, sep=&quot;&quot; ), grid, base_width=12, base_height=8 ) grid "],["novelty-lexicase.html", "Chapter 11 Novelty lexicase 11.1 Overview 11.2 Analysis dependencies 11.3 Setup 11.4 Exploration diagnostic performance 11.5 Unique starting positions 11.6 Manuscript figures", " Chapter 11 Novelty lexicase 11.1 Overview # Relative location of data. working_directory &lt;- &quot;experiments/2021-06-01-novelty/analysis/&quot; # working_directory &lt;- &quot;./&quot; # Settings for visualization cb_palette &lt;- &quot;Set2&quot; # Create directory to dump plots dir.create(paste0(working_directory, &quot;imgs&quot;), showWarnings=FALSE) 11.2 Analysis dependencies library(ggplot2) library(tidyverse) library(cowplot) library(viridis) library(RColorBrewer) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 1.0 ## year 2021 ## month 05 ## day 18 ## svn rev 80317 ## language R ## version.string R version 4.1.0 (2021-05-18) ## nickname Camp Pontanezen 11.3 Setup data_loc &lt;- paste0( working_directory, &quot;data/timeseries-res-1000g.csv&quot; ) data &lt;- read.csv(data_loc, na.strings=&quot;NONE&quot;) data$cardinality &lt;- as.factor( data$OBJECTIVE_CNT ) data$selection_name &lt;- as.factor( data$selection_name ) data$epsilon &lt;- as.factor( data$LEX_EPS ) data$k &lt;- as.factor( data$NOVEL_K ) data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT final_data &lt;- filter(data, evaluations==max(data$evaluations)) ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) 11.4 Exploration diagnostic performance elite_ave_performance_fig &lt;- ggplot( data, aes(x=gen, y=elite_trait_avg, color=k, fill=k) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_continuous( name=&quot;Generations&quot; ) + scale_fill_brewer( name=&quot;k&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;k&quot;, palette=cb_palette ) elite_ave_performance_fig 11.4.1 Final performance elite_final_performance_fig &lt;- ggplot( final_data, aes(x=k, y=elite_trait_avg, fill=k) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=k), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, 100) ) + scale_x_discrete( name=&quot;k&quot; ) + scale_fill_brewer( name=&quot;k&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;k&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) elite_final_performance_fig 11.5 Unique starting positions unique_start_position_coverage_fig &lt;- ggplot( data, aes(x=gen, y=unique_start_positions_coverage, color=k, fill=k) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0.0, 1.0) ) + scale_x_continuous( name=&quot;Generations&quot; ) + scale_fill_brewer( name=&quot;k&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;k&quot;, palette=cb_palette ) unique_start_position_coverage_fig 11.5.1 Final starting position coverage unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes(x=k, y=unique_start_positions_coverage, fill=k) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=k), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, 1.0) ) + scale_x_discrete( name=&quot;k&quot; ) + scale_fill_brewer( name=&quot;k&quot;, palette=cb_palette ) + scale_color_brewer( name=&quot;k&quot;, palette=cb_palette ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig 11.6 Manuscript figures legend &lt;- cowplot::get_legend( elite_ave_performance_fig + guides( color=guide_legend(nrow=1), fill=guide_legend(nrow=1) ) + theme( legend.position = &quot;bottom&quot;, legend.box=&quot;horizontal&quot;, legend.justification=&quot;center&quot; ) ) grid &lt;- plot_grid( elite_ave_performance_fig + ggtitle(&quot;Performance over time&quot;) + theme(legend.position=&quot;none&quot;), elite_final_performance_fig + ggtitle(&quot;Final performance&quot;) + theme(), unique_start_position_coverage_fig + ggtitle(&quot;Activation position coverage over time&quot;) + theme(legend.position=&quot;none&quot;), unique_start_positions_coverage_final_fig + ggtitle(&quot;Final activation position coverage&quot;) + theme(), nrow=2, ncol=2, rel_widths=c(3,2), labels=&quot;auto&quot; ) grid &lt;- plot_grid( grid, legend, nrow=2, ncol=1, rel_heights=c(1, 0.1) ) save_plot( paste(working_directory, &quot;imgs/novelty-panel.pdf&quot;, sep=&quot;&quot;), grid, base_width=12, base_height=8 ) grid "],["references.html", "References", " References "]]
